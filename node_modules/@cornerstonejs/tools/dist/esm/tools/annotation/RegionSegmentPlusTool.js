import { getRenderingEngine, utilities as csUtils } from '@cornerstonejs/core';
import { growCut } from '../../utilities/segmentation';
import GrowCutBaseTool from '../base/GrowCutBaseTool';
class RegionSegmentPlusTool extends GrowCutBaseTool {
    static { this.toolName = 'RegionSegmentPlus'; }
    constructor(toolProps = {}, defaultToolProps = {
        supportedInteractionTypes: ['Mouse', 'Touch'],
        configuration: {
            positiveSeedVariance: 0.4,
            negativeSeedVariance: 0.9,
            subVolumePaddingPercentage: 0.1,
            islandRemoval: {
                enabled: true,
            },
        },
    }) {
        super(toolProps, defaultToolProps);
    }
    async preMouseDownCallback(evt) {
        const eventData = evt.detail;
        const { currentPoints } = eventData;
        const { world: worldPoint } = currentPoints;
        await super.preMouseDownCallback(evt);
        this.growCutData = csUtils.deepMerge(this.growCutData, {
            worldPoint,
            islandRemoval: {
                worldIslandPoints: [worldPoint],
            },
        });
        this.growCutData.worldPoint = worldPoint;
        this.growCutData.islandRemoval = {
            worldIslandPoints: [worldPoint],
        };
        this.runGrowCut();
        return true;
    }
    getRemoveIslandData(growCutData) {
        const { worldPoint } = growCutData;
        return {
            worldIslandPoints: [worldPoint],
        };
    }
    async getGrowCutLabelmap(growCutData) {
        const { segmentation: { referencedVolumeId }, renderingEngineId, viewportId, worldPoint, options, } = growCutData;
        const renderingEngine = getRenderingEngine(renderingEngineId);
        const viewport = renderingEngine.getViewport(viewportId);
        const { subVolumePaddingPercentage } = this.configuration;
        const mergedOptions = {
            ...options,
            subVolumePaddingPercentage,
        };
        return growCut.runOneClickGrowCut(referencedVolumeId, worldPoint, viewport, mergedOptions);
    }
}
export default RegionSegmentPlusTool;
